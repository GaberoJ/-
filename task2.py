"""
Задание 2.
Попытайтесь выполнить профилирование памяти в любом скрипте с рекурсией.
Вам нужно обнаружить проблему в процессе этого. Но проблема связана не с тем,
что рекурсия потребляет много памяти, а с самим процессом замеров.
Опищите эту проблему и найдите простой путь ее решения.
Опишите этот путь и покажите его применение
"""
from memory_profiler import profile


@profile
def wrapper(*args):
    def reverse_number(number):
        digit = number % 10
        number = number // 10
        if number == 0:
            return str(digit)
        else:
            return str(digit) + str(reverse_number(number))
    return reverse_number(*args)


user_number = int(input('Введите число: '))
print('Перевернутое число:', wrapper(user_number))

# Проблема замера памяти с помощью декоратора @profile в функции с рекурсией заключалась в том, что на выходе мы
# получали много таблиц (замерялось каждое выполнение функции). Решение - обернуть усследуемую функцию внешней,
# и уже навешать декоратор на нее. Тогда замер пройдет один раз и на выходе будет 1 общая таблица.